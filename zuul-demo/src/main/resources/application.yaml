server:
  port: 8760

spring:
  application:
    name: zuul
  zipkin:
    base-url: http://localhost:8900
  sleuth:
    sampler:
      probability: 1

zuul:
  debug:
    request: true
  # 阻止将eureka中的微服务暴露在zuul网关中
  ignored-services: "*"
  routes:
    a:
      path: /a/**
      url: http://www.baidu.com/
      sensitiveHeaders: #留空会将所有请求头转发到后续服务中
    user-service-provider: /up/**
    user-service-invoker: /ui/**
  retryable: true

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: false
    enabled: true
  instance:
    hostname: ${spring.application.name}
    appname: ${spring.application.name}-app

# 针对user-service-provider具体服务实例的超时设置
user-service-provider:
  ribbon:
    ConnectTimeout: 1000
    ReadTimeout: 5000
    MaxAutoRetries: 0
    MaxAutoRetriesNextServer: 0

#  AbstractRibbonCommand
ribbon:
  ConnectTimeout: 1000 #默认1000
  ReadTimeout: 3000 #默认1000
  MaxAutoRetries: 3 #默认0
  MaxAutoRetriesNextServer: 0 #默认1
  eager-load:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            # 熔断超时时间应该大于ribbonTimeout = (ribbonReadTimeout + ribbonConnectTimeout) * (maxAutoRetries + 1) * (maxAutoRetriesNextServer + 1);
            # (${ribbon.ReadTimeout}+${ribbon.ConnectTimeout})*(${ribbon.MaxAutoRetries}+1)*(${ribbon.MaxAutoRetriesNextServer}+1)+500
            timeoutInMilliseconds: 16500
    user-service-provider:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6500

print-server-address:
  ignore-parent-context: true

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"

logging:
  level:
    root: INFO
    cn:
      netbuffer: DEBUG
    org:
      springframework:
        web:
          servlet:
            DispatcherServlet: DEBUG
